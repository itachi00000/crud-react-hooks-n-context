{"version":3,"sources":["redux/types.js","redux/usersReducer.js","context/GlobalState.jsx","redux/usersAction.js","components/SearchField.jsx","components/Header.jsx","server-url.js","components/AddForm.jsx","components/EditForm.jsx","components/ActionButtons.jsx","components/Table.jsx","components/Alert.jsx","components/BackHome.jsx","pages/ReadPage.jsx","pages/ErrorPage.jsx","index.jsx","App.jsx"],"names":["SEARCH_USER","ADD_USER","DELETE_USER","EDIT_USER","FETCH_USERS","GET_USER","EDITING","SHOW_ALERT","IS_LOADING","IS_ERROR","updatingUsers","users","updUser","userIndex","findIndex","user","id","slice","usersReducer","state","action","type","payload","editing","searchQuery","filter","currentUser","fetchStatus","isLoading","isError","alerts","alertMsg","alertType","initialState","inputs","name","username","email","isSuccess","GlobalContext","createContext","showAlert","deleteUser","fetchUsers","getUser","editingStatus","bool","SearchField","useContext","inputValue","stableDispatch","role","placeholder","className","onChange","e","target","value","Header","SERVER_URL","AddForm","initStateForm","useState","input","setInput","dispatch","handleChange","htmlFor","onClick","a","async","axios","post","resp","data","response","console","error","msg","message","setTimeout","EditForm","resetForm","prevInput","put","ActionButtons","to","length","userToEdit","find","window","confirm","delete","Table","useEffect","log","get","fetchData","filteredUsers","toLowerCase","includes","trim","displayUsers","map","key","colSpan","style","textAlign","Alert","BackHome","ReadPage","errorFetch","setErrorFetch","useParams","ErrorPage","ReactDOM","render","children","useReducer","useCallback","Provider","height","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.3d58c1cf.chunk.js","sourcesContent":["export const SEARCH_USER = 'SEARCH_USER';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const EDITING = 'EDITING';\r\nexport const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const IS_LOADING = 'IS_LOADING';\r\nexport const IS_ERROR = 'IS_ERROR';\r\n","import {\r\n  ADD_USER,\r\n  SEARCH_USER,\r\n  DELETE_USER,\r\n  FETCH_USERS,\r\n  GET_USER,\r\n  EDITING,\r\n  EDIT_USER,\r\n  SHOW_ALERT,\r\n  IS_ERROR,\r\n  IS_LOADING\r\n} from './types';\r\n\r\n//   for editingUser\r\n// same as .mapping\r\nfunction updatingUsers(users, updUser) {\r\n  const userIndex = users.findIndex((user) => user.id === updUser.id);\r\n  const updatedUsers = [\r\n    ...users.slice(0, userIndex),\r\n    updUser,\r\n    ...users.slice(userIndex + 1)\r\n  ];\r\n  return updatedUsers;\r\n}\r\n\r\n// redux state=initState\r\n// global context give initState\r\nexport function usersReducer(state, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case ADD_USER:\r\n      return { ...state, users: [...state.users, payload] };\r\n    case EDIT_USER:\r\n      return { ...state, users: updatingUsers(state.users, payload) };\r\n    case EDITING:\r\n      return { ...state, editing: payload };\r\n    case SEARCH_USER:\r\n      return { ...state, searchQuery: payload };\r\n    case DELETE_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.id !== payload)\r\n      };\r\n    case FETCH_USERS:\r\n      return { ...state, users: payload, currentUser: null };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: payload\r\n      };\r\n    case IS_ERROR:\r\n      return {\r\n        ...state,\r\n        fetchStatus: {\r\n          ...state.fetchStatus,\r\n          isLoading: false,\r\n          isError: payload\r\n        }\r\n      };\r\n    case IS_LOADING:\r\n      return {\r\n        ...state,\r\n        fetchStatus: { ...state.fetchStatus, isLoading: true }\r\n      };\r\n    case SHOW_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: {\r\n          ...state.alerts,\r\n          alertMsg: payload,\r\n          alertType: action.alertType\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function otherReducer(state, action = {}) {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, {\r\n  useReducer,\r\n  createContext,\r\n  useCallback\r\n  // useEffect,\r\n} from 'react';\r\n\r\n// reducer\r\nimport { usersReducer } from '../redux/usersReducer';\r\n\r\n// init\r\nconst initialState = {\r\n  users: [],\r\n  currentUser: null,\r\n  searchQuery: '',\r\n  editing: false,\r\n  inputs: { name: '', username: '', email: '' }, // ??\r\n  alerts: { alertMsg: '', alertType: '', id: null },\r\n  fetchStatus: { isLoading: false, isError: false, isSuccess: false }\r\n};\r\n\r\n// const initialState2 = {};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(usersReducer, initialState);\r\n\r\n  const stableDispatch = useCallback(dispatch, []);\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        ...state,\r\n        dispatch,\r\n        stableDispatch\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n\r\n  // GET ALL, (from old)\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const resp = await axios.get(`${SERVER_URL}`);\r\n  //       dispatch(fetchUsers(resp.data));\r\n  //       dispatch(showAlert('Fetch Success', 'success'));\r\n  //     } catch (error) {\r\n  //       console.error(error.message);\r\n  //       dispatch(showAlert(error.message, 'danger'));\r\n  //     } finally {\r\n  //       setTimeout(() => {\r\n  //         // clearing alert\r\n  //         dispatch(showAlert(''));\r\n  //       }, 2000);\r\n  //     }\r\n  //   };\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  // function fetchingUsers(usersS) {\r\n  //   dispatch({ type: 'FETCH_USERS', payload: usersS });\r\n  // }\r\n\r\n  // function dispatchFetchUsers(users) {\r\n  //   dispatch(fetchUsers(users));\r\n  // }\r\n};\r\n","import {\r\n  ADD_USER,\r\n  DELETE_USER,\r\n  SEARCH_USER,\r\n  FETCH_USERS,\r\n  GET_USER,\r\n  EDITING,\r\n  EDIT_USER,\r\n  SHOW_ALERT,\r\n  IS_ERROR,\r\n  IS_LOADING\r\n} from './types';\r\n\r\nexport function showAlert(alertMsg, alertType = '') {\r\n  return {\r\n    type: SHOW_ALERT,\r\n    alertType, // string\r\n    payload: alertMsg // string\r\n  };\r\n}\r\n\r\n// REQUEST STATUS (loading, success, error)\r\n\r\nexport function setIsLoading(bool) {\r\n  return {\r\n    type: IS_LOADING,\r\n    payload: bool\r\n  };\r\n}\r\n\r\nexport function setIsError(bool) {\r\n  return {\r\n    type: IS_ERROR,\r\n    payload: bool\r\n  };\r\n}\r\n\r\n// CRUD+S\r\nexport function searchUser(searchQuery) {\r\n  return {\r\n    type: SEARCH_USER,\r\n    payload: searchQuery // string\r\n  };\r\n}\r\n\r\nexport function addUser(user) {\r\n  return {\r\n    type: ADD_USER,\r\n    payload: user // object\r\n  };\r\n}\r\n\r\nexport function deleteUser(id) {\r\n  return {\r\n    type: DELETE_USER,\r\n    payload: id // number\r\n  };\r\n}\r\n\r\nexport function editUser(updUser) {\r\n  return {\r\n    type: EDIT_USER,\r\n    payload: updUser // object\r\n  };\r\n}\r\n\r\nexport function fetchUsers(users) {\r\n  return {\r\n    type: FETCH_USERS,\r\n    payload: users // array of object\r\n  };\r\n}\r\n\r\nexport function getUser(user) {\r\n  return {\r\n    type: GET_USER,\r\n    payload: user // object\r\n  };\r\n}\r\n\r\nexport function editingStatus(bool) {\r\n  return {\r\n    type: EDITING,\r\n    payload: bool // boolean\r\n  };\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\n// context\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n// redux action\r\nimport { searchUser } from '../redux/usersAction';\r\n\r\nexport default function SearchField() {\r\n  const { searchQuery: inputValue, stableDispatch } = useContext(GlobalContext);\r\n\r\n  const handleInputChange = (e) => {\r\n    stableDispatch(searchUser(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div role=\"form\">\r\n      <input\r\n        type=\"search\"\r\n        name=\"search\"\r\n        placeholder=\"Type Name\"\r\n        className=\"form-control\"\r\n        onChange={handleInputChange}\r\n        value={inputValue}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// comp\r\nimport SearchField from './SearchField';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"jumbotron bg-primary text-white\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">Header of Page</h1>\r\n        <p className=\"lead\">\r\n          Lorem ipsum dolor sit, amet consectetur adipisicing elit. Alias,\r\n          veritatis.\r\n        </p>\r\n        <SearchField />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","export function getServerUrl() {\r\n  let serverUrl = '';\r\n\r\n  // deploy frontend to gh-pages\r\n  // server and database to heroku\r\n  if (process.env.NODE_ENV === 'production') {\r\n    // use heroku remote - in production\r\n    serverUrl = 'https://desolate-taiga-56372.herokuapp.com/robots';\r\n  } else {\r\n    // use localhost - in development\r\n    serverUrl = 'http://localhost:5000/robots';\r\n  }\r\n  return serverUrl;\r\n}\r\n\r\nexport const SERVER_URL = getServerUrl();\r\n","import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\n// ctx\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n// action\r\nimport { addUser, showAlert } from '../redux/usersAction';\r\n\r\n// utils\r\nimport { SERVER_URL } from '../server-url';\r\n\r\n// main\r\nexport default function AddForm() {\r\n  const initStateForm = {\r\n    name: '',\r\n    username: '',\r\n    email: ''\r\n  };\r\n\r\n  const [input, setInput] = useState(initStateForm);\r\n  const { dispatch, stableDispatch } = useContext(GlobalContext);\r\n\r\n  const handleAddUser = async () => {\r\n    try {\r\n      const { name, username, email } = input;\r\n\r\n      if (!name || !username || !email) {\r\n        return stableDispatch(showAlert('Lack of Info', 'danger'));\r\n      }\r\n\r\n      const resp = await axios.post(`${SERVER_URL}`, {\r\n        name,\r\n        username,\r\n        email\r\n      });\r\n\r\n      dispatch(addUser(resp.data));\r\n\r\n      stableDispatch(showAlert('Added new User', 'success'));\r\n\r\n      // reset\r\n      return setInput(initStateForm);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error('error.response:', error.response.data.msg);\r\n        return stableDispatch(showAlert(error.response.data.msg, 'danger'));\r\n      }\r\n      console.error('error.message: ', error.message);\r\n      return stableDispatch(showAlert(error.message, 'danger'));\r\n    } finally {\r\n      setTimeout(() => {\r\n        // clearing msg\r\n        stableDispatch(showAlert(''));\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setInput({ ...input, [name]: value });\r\n  };\r\n\r\n  const { name, email, username } = input;\r\n\r\n  return (\r\n    <div className=\"col-lg-3 col-md-3\">\r\n      <h3>Add Form</h3>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-block\"\r\n          onClick={handleAddUser}\r\n        >\r\n          Add\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n// action\r\nimport {\r\n  editUser,\r\n  getUser,\r\n  editingStatus,\r\n  showAlert\r\n} from '../redux/usersAction';\r\n\r\n// utils\r\nimport { SERVER_URL } from '../server-url';\r\n\r\n// main\r\nexport default function EditForm() {\r\n  const { dispatch, currentUser, stableDispatch } = useContext(GlobalContext);\r\n  const [input, setInput] = useState(currentUser);\r\n\r\n  // CANCEL BUTTON\r\n  const resetForm = () => {\r\n    // reset currentUser\r\n    dispatch(getUser(null));\r\n    // set editing: false\r\n    dispatch(editingStatus(false));\r\n\r\n    dispatch(showAlert(''));\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      // input-form\r\n      const { id, name, username, email } = input;\r\n\r\n      if (!name || !username || !email) {\r\n        return stableDispatch(showAlert('Lack of Info', 'danger'));\r\n      }\r\n\r\n      const resp = await axios.put(`${SERVER_URL}/${id}`, {\r\n        name,\r\n        username,\r\n        email\r\n      });\r\n\r\n      dispatch(editUser(resp.data));\r\n\r\n      stableDispatch(showAlert('User Updated', 'primary'));\r\n\r\n      return resetForm();\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error('errorResponse: ', error.response.data.msg);\r\n        return stableDispatch(showAlert(error.response.data.msg, 'danger'));\r\n      }\r\n      console.error('errorMsg:', error.message);\r\n      return stableDispatch(showAlert(error.message, 'danger'));\r\n    } finally {\r\n      setTimeout(() => {\r\n        // clearing msg\r\n        stableDispatch(showAlert(''));\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  // handle input\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setInput((prevInput) => ({ ...prevInput, [name]: value }));\r\n  };\r\n\r\n  // console.log('Edit input', input);\r\n  // console.log('Edit Status', editing);\r\n  const { name, email, username } = input;\r\n\r\n  return (\r\n    <div className=\"col-lg-3 col-md-3\">\r\n      <h3>Edit Form</h3>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"clearfix float-right\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleUpdate}\r\n            className=\"btn btn-primary mr-2\"\r\n          >\r\n            Update\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={resetForm}\r\n            className=\"btn btn-outline-danger \"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// ctx\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n//  action\r\nimport {\r\n  deleteUser,\r\n  editingStatus,\r\n  getUser,\r\n  showAlert\r\n} from '../redux/usersAction';\r\n\r\n// utils\r\nimport { SERVER_URL } from '../server-url';\r\n\r\n// main\r\nexport default function ActionButtons({ id }) {\r\n  const { stableDispatch, dispatch, users } = useContext(GlobalContext);\r\n\r\n  // DELETE BUTTON + window.confirm()\r\n  const handleDelete = async () => {\r\n    if (!id || !users.length) return;\r\n\r\n    // confirmation\r\n    if (!window.confirm(`Deleting id:${id}, Are you Sure?`)) return;\r\n\r\n    try {\r\n      // no-return\r\n      await axios.delete(`${SERVER_URL}/${id}`);\r\n\r\n      dispatch(deleteUser(id));\r\n\r\n      stableDispatch(showAlert(`Deleted ${id}`, 'primary'));\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      stableDispatch(showAlert(error.response.data.msg, 'danger'));\r\n    } finally {\r\n      // do we need finally?\r\n      setTimeout(() => {\r\n        stableDispatch(showAlert(''));\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  // EDIT BUTTON > EDIT FORM\r\n  const handleEdit = async () => {\r\n    if (!id || !users.length) return;\r\n\r\n    stableDispatch(editingStatus(true));\r\n\r\n    try {\r\n      // no need to fetch, its already fetch\r\n      const userToEdit = users.find((user) => user.id === id);\r\n\r\n      dispatch(getUser(userToEdit));\r\n      stableDispatch(showAlert('Editing...', 'info'));\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      stableDispatch(showAlert('Error Edit', 'danger'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to={`/read/${id}`} className=\"btn btn-sm btn-info\">\r\n        Read\r\n      </Link>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-sm btn-primary\"\r\n        onClick={handleEdit}\r\n      >\r\n        Edit\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-sm btn-outline-danger\"\r\n        onClick={handleDelete}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// ctx\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n// action\r\nimport { fetchUsers, showAlert } from '../redux/usersAction';\r\n\r\n// comp.\r\nimport AddForm from './AddForm';\r\nimport EditForm from './EditForm';\r\nimport ActionButtons from './ActionButtons';\r\n\r\n// utils\r\nimport { SERVER_URL } from '../server-url';\r\n\r\n// main\r\nexport default function Table() {\r\n  const {\r\n    users,\r\n    searchQuery,\r\n    currentUser,\r\n    stableDispatch,\r\n    editing\r\n  } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const resp = await axios.get(`${SERVER_URL}`);\r\n        stableDispatch(fetchUsers(resp.data));\r\n      } catch (error) {\r\n        stableDispatch(showAlert('Error on Fetching', 'danger'));\r\n        console.error(error.message);\r\n      }\r\n    };\r\n    console.log('use-effect getAllUser');\r\n\r\n    fetchData();\r\n  }, [stableDispatch]);\r\n\r\n  console.log('users:', users);\r\n  console.log('searchQuery:', searchQuery);\r\n  console.log('currentUser:', currentUser);\r\n  console.log('editing:', editing);\r\n  console.log('<<<<*******************>>>>');\r\n\r\n  const filteredUsers = users.filter((user) => {\r\n    return user.name.toLowerCase().includes(searchQuery.toLowerCase().trim());\r\n  });\r\n\r\n  //\r\n  const displayUsers = filteredUsers.map(({ id, name, username, email }) => (\r\n    <tr key={id}>\r\n      <td>{id}</td>\r\n      <td>{name}</td>\r\n      <td>{username}</td>\r\n      <td>{email}</td>\r\n      <td>\r\n        <ActionButtons id={id} />\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-lg-9 col-md-9\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Username</th>\r\n              <th>Email</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredUsers.length ? (\r\n              displayUsers\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"5\" style={{ textAlign: 'center' }}>\r\n                  No Data Available....\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {editing ? <EditForm /> : <AddForm />}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Alert({ alerts: { alertMsg, alertType } }) {\r\n  return (\r\n    // alert-type = danger, warning, success, info\r\n    <div className={`text-center alert alert-${alertType}`}>\r\n      {alertMsg || 'There must be AlertMsg here'}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function BackHome() {\r\n  // back to homepage OR dashboard\r\n  return (\r\n    <div className=\"col-md-2 my-4\">\r\n      <Link to=\"/\" className=\"btn btn-block btn-lg btn-outline-danger\">\r\n        Back\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n// action\r\nimport { getUser } from '../redux/usersAction';\r\n\r\n// comp.\r\nimport BackHome from '../components/BackHome';\r\n\r\n// utils\r\nimport { SERVER_URL } from '../server-url';\r\n\r\n// main\r\nexport default function ReadPage() {\r\n  const [errorFetch, setErrorFetch] = useState(false);\r\n  const { currentUser, users, searchQuery, stableDispatch } = useContext(\r\n    GlobalContext\r\n  );\r\n\r\n  const { id } = useParams();\r\n\r\n  //\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const resp = await axios.get(`${SERVER_URL}/${id}`);\r\n        stableDispatch(getUser(resp.data));\r\n      } catch (error) {\r\n        console.error('at fetch-a-user', error.message);\r\n        setErrorFetch(true);\r\n      }\r\n    };\r\n    console.log('useEffect- getOneUser');\r\n    fetchData();\r\n  }, [id, stableDispatch]);\r\n\r\n  // for checking\r\n  console.log('users:', users);\r\n  console.log('searchQuery:', searchQuery);\r\n  console.log('currentUser:', currentUser);\r\n\r\n  // redirect when fetch error\r\n  if (errorFetch) {\r\n    return <Redirect to=\"/error\" />;\r\n  }\r\n\r\n  // Loading component\r\n  if (!currentUser) {\r\n    return <div>Loading</div>;\r\n  }\r\n\r\n  const { name, username, email } = currentUser;\r\n  return (\r\n    <>\r\n      <BackHome />\r\n      <div className=\"col-md-8\">\r\n        <h3>Read Page for {id}</h3>\r\n        <p>name: {name}</p>\r\n        <p>username: {username}</p>\r\n        <p>email: {email}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst ErrorPage = () => {\r\n  return <div>Error Page</div>;\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\n// comp\r\nimport App from './App';\r\n// css\r\nimport './bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <GlobalProvider>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </GlobalProvider>,\r\n  document.getElementById('root')\r\n);\r\n","import React, { useContext } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n// comps\r\nimport Header from './components/Header';\r\nimport Table from './components/Table';\r\nimport Alert from './components/Alert';\r\n\r\n// pages\r\nimport ReadPage from './pages/ReadPage';\r\nimport ErrorPage from './pages/ErrorPage';\r\n\r\n// context, redux\r\nimport { GlobalContext } from './context/GlobalState';\r\n\r\n// main\r\nexport default function App() {\r\n  const { alerts } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container-fluid\">\r\n        {alerts.alertMsg ? (\r\n          <Alert alerts={alerts} />\r\n        ) : (\r\n          // spacer\r\n          <div style={{ height: '67px' }} />\r\n        )}\r\n\r\n        <div className=\"row justify-content-md-center\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Table} />\r\n            <Route exact path=\"/read/:id\" component={ReadPage} />\r\n            <Route exact path=\"/error\" component={ErrorPage} />\r\n            <Route component={ErrorPage} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n      {/* spacer */}\r\n      <div style={{ height: '300px' }} />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}